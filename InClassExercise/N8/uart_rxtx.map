Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
                              hd44780.o (__divmodhi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
                              hd44780.o (__divmodsi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
                              uart_rxtx.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
                              uart_rxtx.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                              uart_rxtx.o (__itoa_ncheck)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

rcv_rdy             0x1               uart_rxtx.o
uart_tx_buf         0x28              uart_functions.o
uart1_tx_buf        0x28              uart_functions.o
lcd_string_array    0x20              hd44780.o
i                   0x1               uart_rxtx.o
lcd_str             0x10              hd44780.o
lcd_string          0x3               uart_rxtx.o
uart1_rx_buf        0x28              uart_functions.o
lcd_str_array       0x10              uart_rxtx.o
uart_rx_buf         0x28              uart_functions.o
rx_char             0x1               uart_rxtx.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
LOAD uart_rxtx.o
LOAD uart_functions.o
LOAD hd44780.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libatmega128.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ff00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xff00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xe0c
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000000000008c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x1a /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 .init4         0x00000000000000b2       0x10 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c2        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ca        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000ca                __vector_22
                0x00000000000000ca                __vector_28
                0x00000000000000ca                __vector_1
                0x00000000000000ca                __vector_32
                0x00000000000000ca                __vector_34
                0x00000000000000ca                __vector_24
                0x00000000000000ca                __vector_12
                0x00000000000000ca                __bad_interrupt
                0x00000000000000ca                __vector_6
                0x00000000000000ca                __vector_31
                0x00000000000000ca                __vector_3
                0x00000000000000ca                __vector_23
                0x00000000000000ca                __vector_30
                0x00000000000000ca                __vector_25
                0x00000000000000ca                __vector_11
                0x00000000000000ca                __vector_13
                0x00000000000000ca                __vector_17
                0x00000000000000ca                __vector_19
                0x00000000000000ca                __vector_7
                0x00000000000000ca                __vector_27
                0x00000000000000ca                __vector_5
                0x00000000000000ca                __vector_33
                0x00000000000000ca                __vector_4
                0x00000000000000ca                __vector_9
                0x00000000000000ca                __vector_2
                0x00000000000000ca                __vector_21
                0x00000000000000ca                __vector_15
                0x00000000000000ca                __vector_29
                0x00000000000000ca                __vector_8
                0x00000000000000ca                __vector_26
                0x00000000000000ca                __vector_14
                0x00000000000000ca                __vector_10
                0x00000000000000ca                __vector_16
                0x00000000000000ca                __vector_20
 .text          0x00000000000000ce       0x6c uart_rxtx.o
                0x00000000000000ce                spi_init
                0x00000000000000de                __vector_18
 .text          0x000000000000013a       0xf6 uart_functions.o
                0x000000000000013a                uart_putc
                0x0000000000000146                uart1_putc
                0x000000000000015c                uart_puts
                0x0000000000000178                uart1_puts
                0x000000000000019e                uart_puts_p
                0x00000000000001c4                uart_init
                0x00000000000001de                uart1_init
                0x00000000000001fe                uart_getc
                0x0000000000000214                uart1_getc
 .text          0x0000000000000230      0x9e8 hd44780.o
                0x0000000000000230                send_lcd
                0x0000000000000266                refresh_lcd
                0x0000000000000320                set_custom_character
                0x0000000000000394                set_cursor
                0x00000000000003cc                uint2lcd
                0x00000000000004c6                int2lcd
                0x0000000000000502                cursor_on
                0x0000000000000532                cursor_off
                0x0000000000000562                shift_right
                0x0000000000000592                shift_left
                0x00000000000005c2                strobe_lcd
                0x00000000000005d4                clear_display
                0x0000000000000604                cursor_home
                0x0000000000000634                home_line2
                0x0000000000000664                fill_spaces
                0x000000000000069c                char2lcd
                0x00000000000006cc                string2lcd
                0x000000000000072a                lcd_init
                0x00000000000008ae                lcd_int32
                0x0000000000000a5e                lcd_int16
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .text          0x0000000000000c18        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000c18                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000c18       0xb4 uart_rxtx.o
                0x0000000000000c18                main
 .text.libgcc.mul
                0x0000000000000ccc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000ccc       0x28 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000000ccc                __divmodhi4
                0x0000000000000ccc                _div
 .text.libgcc   0x0000000000000cf4        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000cf4        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000cf4        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000cf4        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000cf4        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000cf4        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000000000000cf4       0x2e /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
                0x0000000000000cf4                __divmodsi4
 .text.libgcc   0x0000000000000d22        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000d22        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000d22        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000d22        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000d22        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000000d22        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x0000000000000d22       0x10 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
                0x0000000000000d22                __negsi2
 .text.libgcc   0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000d32        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000d32       0x28 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000000d32                __udivmodhi4
 .text.libgcc   0x0000000000000d5a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000d5a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000d5a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000d5a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000d5a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000d5a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000d5a       0x44 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000000d5a                __udivmodsi4
 .text.libgcc   0x0000000000000d9e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000d9e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000d9e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000d9e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000d9e        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.avr-libc
                0x0000000000000d9e       0x16 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                0x0000000000000d9e                __itoa_ncheck
 .text.avr-libc
                0x0000000000000db4       0x34 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                0x0000000000000db4                __utoa_ncheck
                0x0000000000000db6                __utoa_common
 .text.avr-libc
                0x0000000000000de8       0x20 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000de8                strrev
                0x0000000000000e08                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000e08        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                0x0000000000000e08                exit
                0x0000000000000e08                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000e08        0x4 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000e0c                _etext = .

.data           0x0000000000800100        0xe load address 0x0000000000000e0c
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x0 uart_rxtx.o
 .data          0x0000000000800100        0x0 uart_functions.o
 .data          0x0000000000800100        0x0 hd44780.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800100        0xd uart_rxtx.o
 *(.gnu.linkonce.d*)
                0x000000000080010e                . = ALIGN (0x2)
 *fill*         0x000000000080010d        0x1 
                0x000000000080010e                _edata = .
                0x000000000080010e                PROVIDE (__data_end, .)

.bss            0x000000000080010e       0xe9
                0x000000000080010e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080010e        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x000000000080010e        0x2 uart_rxtx.o
                0x000000000080010e                send_seq
 .bss           0x0000000000800110        0x0 uart_functions.o
 .bss           0x0000000000800110        0x1 hd44780.o
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800111       0x16 uart_rxtx.o
                0x0000000000800111                rcv_rdy
                0x0000000000800112                i
                0x0000000000800113                lcd_string
                0x0000000000800116                lcd_str_array
                0x0000000000800126                rx_char
 COMMON         0x0000000000800127       0xa0 uart_functions.o
                0x0000000000800127                uart_tx_buf
                0x000000000080014f                uart1_tx_buf
                0x0000000000800177                uart1_rx_buf
                0x000000000080019f                uart_rx_buf
 COMMON         0x00000000008001c7       0x30 hd44780.o
                0x00000000008001c7                lcd_string_array
                0x00000000008001e7                lcd_str
                0x00000000008001f7                PROVIDE (__bss_end, .)
                0x0000000000000e0c                __data_load_start = LOADADDR (.data)
                0x0000000000000e1a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001f7        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008001f7                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x29ac
 *(.stab)
 .stab          0x0000000000000000      0x7ec uart_rxtx.o
 .stab          0x00000000000007ec      0x7ec uart_functions.o
                                        0xa08 (size before relaxing)
 .stab          0x0000000000000fd8     0x19d4 hd44780.o
                                       0x1bcc (size before relaxing)

.stabstr        0x0000000000000000     0x13b0
 *(.stabstr)
 .stabstr       0x0000000000000000     0x13b0 uart_rxtx.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 uart_rxtx.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 uart_functions.o
 .comment       0x0000000000000011       0x12 hd44780.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x780
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x780 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_abbrev   0x0000000000000000      0x718
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x718 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x27d
 *(.debug_str)
 .debug_str     0x0000000000000000      0x27d /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(uart_rxtx.elf elf32-avr)
LOAD linker stubs
